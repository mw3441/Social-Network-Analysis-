D1 <- read.csv("best.friends.csv")
View(D1)
install.packages("tidyr")
install.packages("dplyr")
install.packages("igraph")
library(tidyr)
library(dplyr)
library(igraph)
D2 <- read.csv("get.on.with.csv")
D3 <- read.csv("work.with.csv")
D1$from <- as.factor(D1$from)
D1$to <- as.factor(D1$to)
D1$gender.from <- as.factor(D1$gender.from)
D1_edge <- count (get, from, to)
D1_edge <- countD1 (get, from, to)
D1_edge <- count(get, from, to)
D1_edge <- count(D1, from, to)
View(D1_edge)
View(D2)
D1_vertex <- D1 %>% select(from, gender.from) %>% unique
D2$from <- as.factor(D1$from)
D2$from <- as.factor(D2$from)
D2$to <- as.factor(D2$to)
D2$gender.from <- as.factor(D2$gender.from)
D2_edge <- count(D2, from, to)
D2_vertex <- D2 %>% select(from, gender.from) %>% unique
View(D3)
D3$from <- as.factor(D3$from)
D3$to <- as.factor(D3$to)
D3$gender.from <- as.factor(D3$gender.from)
D3_edge <- count(D3, from, to)
D3_vertex <- D3 %>% select(from, gender.from) %>% unique
pdf("best_friends.pdf")
g_D1 <- graph.data.frame(D1_edge, directed=TRUE, vertices=D1_vertex)
plot(g_D1, layout=layout.fruchterman.reingold, vertex.color=D1_vertex$gender.from)
dev.off()
pdf("get_on_with.pdf")
g_D2 <- graph.data.frame(D2_edge, directed=TRUE, vertices=D2_vertex)
plot(g_D2, layout=layout.fruchterman.reingold, vertex.color=D2_vertex$gender.from)
dev.off()
pdf("work_with.pdf")
g_D3 <- graph.data.frame(D3_edge, directed=TRUE, vertices=D3_vertex)
plot(g_D3, layout=layout.fruchterman.reingold, vertex.color=D3_vertex$gender.from)
dev.off()
sort(degree(g_D1), decreasing=TRUE)
sort(degree(g_D2), decreasing=TRUE)
sort(degree(g_D3), decreasing=TRUE)
D1_degree <- sort(degree(g_D1), decreasing=TRUE)
D2_degree <- sort(degree(g_D2), decreasing=TRUE)
D3_degree <- sort(degree(g_D3), decreasing=TRUE)
D1_degree[1]
D2-degree[1]
D2_degree[1]
D2_degree[1]
D3_degree[1]
```{r}
D1_closeness <- sort(closeness(g_D1), decreasing=TRUE)
D1_closeness[1]
D2_closeness <- sort(closeness(g_D2), decreasing=TRUE)
D2_closeness[1]
D3_closeness <- sort(closeness(g_D3), decreasing=TRUE)
D3_closeness[1]
D1_betweenness <- sort(betweenness(g_D1), decreasing=TRUE)
D1_betweenness[1]
D2_betweenness <- sort(betweenness(g_D2), decreasing=TRUE)
D2_betweenness[1]
D3_betweenness <- sort(betweenness(g_D3), decreasing=TRUE)
D3_betweenness[1]
dyad_census(g_D1)
dyad_census(g_D2)
dyad_census(g_D3)
triad_census(g_D1)
triad_census(g_D2)
triad_census(g_D3)
clique_num(g_D1)
clique_num(g_D2)
clique_num(g_D3)
library(tidyr)
library(dplyr)
library(igraph)
largest_cliques(g_D1)
largest_cliques(g_D2)
largest_cliques(g_D3)
library(tidyr)
library(dplyr)
library(igraph)
count_max_cliques(g_D1)
count_max_cliques(g_D2)
count_max_cliques(g_D3)
articulation_points(g_D1)
articulation_points(g_D2)
articulation_points(g_D3)
grade = read.table("grade.txt",header = T,sep="\t")
View(grade)
names(grade)<-c("From","To")
grade$From <-as.factor(grade$From)
grade$To <-as.factor(grade$To)
grade_Edge <- count(grade,From,To)
head(grade_Edge)
grade_Vertex <- grade %>% select(From)%>%unique
grade_graph <- graph.data.frame(grade_Edge,directed = T)
plot(grade_graph,layout = layout.fruchterman.reingold,vertex.color = as.factor(grade))
sort(degree(grade_graph),decreasing = T)[1]
sort(closeness(grade_graph),decreasing = T)[1]
sort(betweenness(grade_graph),decreasing = T)[1]
dyad_census(grade_graph)
triad_census(grade_graph)
clique_num(grade_graph)
largest_cliques(grade_graph)
largest_cliques(grade_graph)
max_cliques(grade_graph)
articulation_points(grade_graph)
pdf(grade_graph.pdf)
pdf("grade_graph.pdf")
plot(grade_graph,layout = layout.fruchterman.reingold,vertex.color = as.factor(grade))
